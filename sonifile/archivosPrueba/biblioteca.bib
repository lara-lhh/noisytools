
@collection{flemming_ieee_2014,
	location = {Piscataway, {NJ}},
	title = {{IEEE} Symposium on Visual Languages and Human-Centric Computing ({VL}/{HCC}), 2014: July 28, 2014 - Aug. 1, 2014, Melbourne, Australia},
	isbn = {978-1-4799-4035-6 978-1-4799-4034-9},
	shorttitle = {{IEEE} Symposium on Visual Languages and Human-Centric Computing ({VL}/{HCC}), 2014},
	publisher = {{IEEE}},
	editor = {Flemming, Scott D. and {Institute of Electrical and Electronics Engineers} and {IEEE Computer Society}},
	date = {2014},
}

@article{bovermann_computation_2014,
	title = {Computation as Material in Live Coding},
	volume = {38},
	issn = {0148-9267, 1531-5169},
	url = {https://direct.mit.edu/comj/article/38/1/40-53/94444},
	doi = {10.1162/COMJ_a_00228},
	abstract = {What does computation sound like, and how can computational processing be integrated into live-coding practice along with code? This article gives insights into three years of artistic research and performance practice with Betablocker, an imaginary central processing unit architecture, specifically designed and implemented for live-coding purposes. It covers the themes of algorithmic composition, sound generation, genetic programming, and autonomous coding in the light of self-manipulating code and artistic research practice.},
	pages = {40--53},
	number = {1},
	journaltitle = {Computer Music Journal},
	shortjournal = {Computer Music Journal},
	author = {Bovermann, Till and Griffiths, Dave},
	urldate = {2024-10-10},
	date = {2014-03},
	langid = {english},
}

@inproceedings{kubelka_live_2019,
	location = {Montreal, {QC}, Canada},
	title = {Live Programming and Software Evolution: Questions During a Programming Change Task},
	rights = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
	isbn = {978-1-72811-519-1},
	url = {https://ieeexplore.ieee.org/document/8813258/},
	doi = {10.1109/ICPC.2019.00017},
	shorttitle = {Live Programming and Software Evolution},
	eventtitle = {2019 {IEEE}/{ACM} 27th International Conference on Program Comprehension ({ICPC})},
	pages = {30--41},
	booktitle = {2019 {IEEE}/{ACM} 27th International Conference on Program Comprehension ({ICPC})},
	publisher = {{IEEE}},
	author = {Kubelka, Juraj and Robbes, Romain and Bergel, Alexandre},
	urldate = {2024-10-10},
	date = {2019-05},
}

@article{rein_exploratory_2018,
	title = {Exploratory and Live, Programming and Coding: A Literature Study Comparing Perspectives on Liveness},
	volume = {3},
	issn = {2473-7321},
	url = {http://programming-journal.org/2019/3/1},
	doi = {10.22152/programming-journal.org/2019/3/1},
	shorttitle = {Exploratory and Live, Programming and Coding},
	abstract = {Various programming tools, languages, and environments give programmers the impression of changing a program while it is running. This experience of liveness has been discussed for over two decades and a broad spectrum of research on this topic exists. Amongst others, this work has been carried out in the communities around three major ideas which incorporate liveness as an important aspect: live programming, exploratory programming, and live coding. While there have been publications on the focus of each particular community, the overall spectrum of liveness across these three communities has not been investigated yet. Thus, we want to delineate the variety of research on liveness. At the same time, we want to investigate overlaps and differences in the values and contributions between the three communities.},
	pages = {1},
	number = {1},
	journaltitle = {The Art, Science, and Engineering of Programming},
	shortjournal = {Programming},
	author = {Rein, Patrick and Ramson, Stefan and Lincke, Jens and Hirschfeld, Robert and Pape, Tobias},
	urldate = {2024-10-10},
	date = {2018-07-23},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/LWSCNIMS/Rein et al. - 2018 - Exploratory and Live, Programming and Coding A Literature Study Comparing Perspectives on Liveness.pdf:application/pdf},
}

@book{blackwell_live_2022,
	location = {Cambridge},
	title = {Live Coding: A User's Manual},
	isbn = {978-0-262-54481-8 978-0-262-37263-3},
	series = {Software Studies},
	shorttitle = {Live Coding},
	abstract = {The first comprehensive introduction to the origins, aspirations, and evolution of live coding. Performative, improvised, on the fly: live coding is about how people interact with the world and each other via code. In the last few decades, live coding has emerged as a dynamic creative practice, gaining attention across cultural and technical fields—from music and the visual arts to computer science. Live Coding: A User's Manual is the first comprehensive introduction to the practice and a broader cultural commentary on the potential for live coding to open up deeper questions about contemporary cultural production and computational culture. This multiauthored book—by artists and musicians, software designers, and researchers—provides a practice-focused account of the origins, aspirations, and evolution of live coding, including expositions from a wide range of live coding practitioners. In a more conceptual register, the authors consider liveness, temporality, and knowledge in relation to live coding, alongside speculating on the practice's future forms. To freely download and read ebook (mobi, epub) and {PDF} files, please visit the resources tab. This book is open access and can be freely downloaded, shared and (if you wish) edited, subject to a {CC}-{BY}-{SA} license},
	pagetotal = {1},
	publisher = {The {MIT} Press},
	author = {Blackwell, Alan F. and Cocker, Emma and Cox, Geoff and {McLean}, Alex and Magnusson, Thor},
	date = {2022},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/GRSTTBYA/Blackwell et al. - 2022 - Live Coding A User's Manual.pdf:application/pdf},
}

@article{mclean_patterns_nodate,
	title = {Patterns of movement in live languages},
	author = {{McLean}, Alex and Wiggins, Geraint},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/KF8JB8EJ/McLean y Wiggins - Patterns of movement in live languages.pdf:application/pdf},
}

@article{collins_live_2003,
	title = {Live coding in laptop performance},
	volume = {8},
	rights = {https://www.cambridge.org/core/terms},
	issn = {1355-7718, 1469-8153},
	url = {https://www.cambridge.org/core/product/identifier/S135577180300030X/type/journal_article},
	doi = {10.1017/S135577180300030X},
	abstract = {Seeking new forms of expression in computer music, a small number of laptop composers are braving the challenges of coding music on the fly. Not content to submit meekly to the rigid interfaces of performance software like Ableton Live or Reason, they work with programming languages, building their own custom software, tweaking or writing the programs themselves as they perform. Often this activity takes place within some established language for computer music like {SuperCollider}, but there is no reason to stop errant minds pursuing their innovations in general scripting languages like Perl. This paper presents an introduction to the field of live coding, of real-time scripting during laptop music performance, and the improvisatory power and risks involved. We look at two test cases, the command-line music of slub utilising, amongst a grab-bag of technologies, Perl and {REALbasic}, and Julian Rohrhuber's Just In Time library for {SuperCollider}. We try to give a flavour of an exciting but hazardous world at the forefront of live laptop performance.},
	pages = {321--330},
	number = {3},
	journaltitle = {Organised Sound},
	shortjournal = {Org. Sound},
	author = {Collins, Nick and {McLEAN}, Alex and Rohrhuber, Julian and Ward, Adrian},
	urldate = {2024-10-10},
	date = {2003-12},
	langid = {english},
}

@article{diapoulis_musical_2023,
	title = {Musical Live Coding in Relation to Interactivity Variations},
	volume = {28},
	issn = {1355-7718, 1469-8153},
	url = {https://www.cambridge.org/core/product/identifier/S1355771823000444/type/journal_article},
	doi = {10.1017/S1355771823000444},
	abstract = {This article explores the similarities and differences between live coding and traditional music performances. The focus is on how bodily movements are expressed and whether pre-reflective processes may be activated during a live coding performance. While reports from practitioners vary on percepts of embodiment, the community is missing a theoretical background that reflects on practice. Understanding pre-reflective processes in live coding can benefit performance practices and tool development. As a live coder, I reflect on personal experiences and explore what I call ‘interactivity variations’, a term to denote different gestural manners of interactions during a performance. I observe patterns of embodiment among various live coders who use diverse performance systems from online videos. Out of 11 examples of performance systems, two cases demonstrate interactivity variations that can activate pre-reflective processes while another exploits direct manipulation. I present some implications for the patterns of bodily movement during a live coding performance and discuss how descriptive and prescriptive notation can be important and potentially influence our sensorimotor network. The article contributes a first account of a sensorimotor theory on live coding performances, reflecting on practice and embodied music cognition by presenting an aesthetic analysis of 11 online video examples.},
	pages = {149--161},
	number = {2},
	journaltitle = {Organised Sound},
	shortjournal = {Org. Sound},
	author = {Diapoulis, Georgios},
	urldate = {2024-10-17},
	date = {2023-08},
	langid = {english},
	file = {Texto completo:/home/lara/Zotero/storage/HR4YHMTA/Diapoulis - 2023 - Musical Live Coding in Relation to Interactivity Variations.pdf:application/pdf},
}

@inproceedings{diapoulis_bottom-up_2022,
	location = {The University of Auckland, New Zealand},
	title = {Bottom-up live coding: Analysis of continuous interactions towards predicting programming behaviours},
	url = {https://nime.pubpub.org/pub/z0lli2w0},
	doi = {10.21428/92fbeb44.51fecaab},
	shorttitle = {Bottom-up live coding},
	eventtitle = {{NIME} 2022},
	booktitle = {{NIME} 2022},
	publisher = {{PubPub}},
	author = {Diapoulis, Georgios and Zannos, Iannis and Tatar, Kıvanç and Dahlstedt, Palle},
	urldate = {2024-10-17},
	date = {2022-06-28},
	file = {Texto completo:/home/lara/Zotero/storage/RARVFZEN/Diapoulis et al. - 2022 - Bottom-up live coding Analysis of continuous interactions towards predicting programming behaviours.pdf:application/pdf},
}

@article{blackwell_programming_2005,
	title = {The Programming Language as a Musical Instrument},
	author = {Blackwell, Alan and Collins, Nick},
	date = {2005},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/CUJRIL9I/Blackwell y Collins - 2005 - The Programming Language as a Musical Instrument.pdf:application/pdf},
}

@article{molina_quintero_alisis_2022,
	title = {Análisis Comparativo de Plataformas para el Live Coding},
	volume = {2},
	rights = {https://creativecommons.org/licenses/by-nc-sa/4.0},
	issn = {2711-3760},
	url = {http://revistas.iudigital.edu.co/index.php/ids/article/view/68},
	doi = {10.47185/27113760.v2n2.68},
	abstract = {En este trabajo se realiza una comparación entre tres plataformas para live coding, es decir, la creación en tiempo real de sonidos y ritmos por medio de expresiones matemáticas. Las orquestas o ensambles de computadores son las agrupaciones que usan el live coding como medio para interpretar la música. En estos ensambles, cada ordenador debe sincronizarse con el servidor, considerando que múltiples instrumentos se tocan simultáneamente. Así, el hallazgo de herramientas que sean versátiles a la hora de interconectar computadores y que se ajuste al tipo de usuario, ya sea músico o informático, es uno de los desatios centrales en el live coding. Dado lo anterior, se busca comparar la funcionalidad y practicidad de las herramientas actuales para la interpretación de música en una orquesta de computadoras. Por esta razón, se seleccionaron tres plataformas usadas en los eventos de creación de música por computadora: Estuary, Gibber y Troop. Dichas plataformas se compararon con respecto a la facilidad de instalación, cantidad de {DSL} (lenguajes de dominio específico) soportados, tiempo de conexión, y estadísticas en {GitHub}. Como resultado del análisis comparativo, se encontró que cada plataforma se puede ajustar a un tipo de usuario diferente, generando las siguientes recomendaciones: (i) Estuary para personas que inician en el live coding; (ii) Gibber para presentaciones rápidas, ensambles esporádicos y usuarios con conocimientos básicos de live coding; (iii) Troop para usuarios con conocimientos avanzados en el live coding. Adicionalmente, se propone la implementación de la plataforma {SoOrOk}, como alternativa que integrará utilidades de las plataformas analizadas, permitiendo su uso por parte de personas con conocimientos básicos o avanzados de live coding.},
	pages = {79--91},
	number = {2},
	journaltitle = {Revista Innovación y Desarrollo Sostenible},
	shortjournal = {ids},
	author = {Molina Quintero, Diego and Montes Restrepo, Victora},
	urldate = {2024-10-18},
	date = {2022-02-28},
	file = {Texto completo:/home/lara/Zotero/storage/J6AFNSD8/Molina Quintero y Montes Restrepo - 2022 - Análisis Comparativo de Plataformas para el Live Coding.pdf:application/pdf},
}

@article{brown_live_2023,
	title = {Live Coding Patterns and a Toolkit for Pure Data},
	volume = {28},
	issn = {1355-7718, 1469-8153},
	url = {https://www.cambridge.org/core/product/identifier/S1355771823000365/type/journal_article},
	doi = {10.1017/S1355771823000365},
	abstract = {Creative activities often involve specific processes and techniques that reflect the unique nature of the activity. For live coders, these processes and techniques can be expressed as algorithms and functions in live coding languages. In many fields, these idiomatic processes are referred to as design patterns. Design patterns are important to understand because they can structure thought and direct users towards particular outcomes. This article examines the design patterns in live coding practices and languages, specifically focusing on the Live Coding Toolkit for Pure Data. Pure Data is a visual programming language, but few live coders have traditionally used it. This article explains how the Live Coding Toolkit allows Pure Data to effectively express the patterns of practice required for successful music live coding performance.},
	pages = {264--275},
	number = {2},
	journaltitle = {Organised Sound},
	shortjournal = {Org. Sound},
	author = {Brown, Andrew R.},
	urldate = {2024-10-18},
	date = {2023-08},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/D938779B/Brown - 2023 - Live Coding Patterns and a Toolkit for Pure Data.pdf:application/pdf},
}

@article{magnusson_algorithms_2011,
	title = {Algorithms as Scores: Coding Live Music},
	volume = {21},
	issn = {0961-1215, 1531-4812},
	url = {https://direct.mit.edu/lmj/article/63659},
	doi = {10.1162/LMJ_a_00056},
	shorttitle = {Algorithms as Scores},
	abstract = {The author discusses live coding as a new path in the evolution of the musical score. Live-coding practice accentuates the score, and whilst it is the perfect vehicle for the performance of algorithmic music it also transforms the compositional process itself into a live event. As a continuation of 20th-century artistic developments of the musical score, live-coding systems often embrace graphical elements and language syntaxes foreign to standard programming languages. The author presents live coding as a highly technologized artistic practice, shedding light on how non-linearity, play and generativity will become prominent in future creative media productions.},
	pages = {19--23},
	journaltitle = {Leonardo Music Journal},
	shortjournal = {Leonardo Music Journal},
	author = {Magnusson, Thor},
	urldate = {2024-10-18},
	date = {2011-12},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/THW59QZW/Magnusson - 2011 - Algorithms as Scores Coding Live Music.pdf:application/pdf},
}

@article{armitage_stenophone_nodate,
	title = {The Stenophone: live coding on a chorded keyboard with continuous control},
	abstract = {Though laptop live coders are known to use other devices and instruments and play with other musicians, laptop live coding generally shares the common physical interface of the {QWERTY} keyboard. This project seeks to provide a means to explore alternatives to the {QWERTY} keyboard as a physical interface to laptop live coding. We present a live coding keyboard which is also a digital musical instrument, called the Stenophone. The Stenophone is an augmented stenotype or chorded keyboard, which permits continuous gestural control of keys and features an ergonomic design. These capabilities are exploited to enable the manipulation of algorithms and their parameterisation simultaneously.},
	author = {Armitage, Jack and {McPherson}, Andrew},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/P9TTFHIM/Armitage y McPherson - The Stenophone live coding on a chorded keyboard with continuous control.pdf:application/pdf},
}

@article{mcpherson_idiomatic_2020,
	title = {Idiomatic Patterns and Aesthetic Influence in Computer Music Languages},
	volume = {25},
	issn = {1355-7718, 1469-8153},
	url = {https://www.cambridge.org/core/product/identifier/S1355771819000463/type/journal_article},
	doi = {10.1017/S1355771819000463},
	abstract = {It is widely accepted that acoustic and digital musical instruments shape the cognitive processes of the performer on both embodied and conceptual levels, ultimately influencing the structure and aesthetics of the resulting performance. In this article we examine the ways in which computer music languages might similarly influence the aesthetic decisions of the digital music practitioner, even when those languages are designed for generality and theoretically capable of implementing any sound-producing process. We examine the basis for querying the non-neutrality of tools with a particular focus on the concept of idiomaticity: patterns of instruments or languages which are particularly easy or natural to execute in comparison to others. We then present correspondence with the developers of several major music programming languages and a survey of digital musical instrument creators examining the relationship between idiomatic patterns of the language and the characteristics of the resulting instruments and pieces. In an open-ended creative domain, asserting causal relationships is difficult and potentially inappropriate, but we find a complex interplay between language, instrument, piece and performance that suggests that the creator of the music programming language should be considered one party to a creative conversation that occurs each time a new instrument is designed.},
	pages = {53--63},
	number = {1},
	journaltitle = {Organised Sound},
	shortjournal = {Org. Sound},
	author = {{McPherson}, Andrew and Tahıroğlu, Koray},
	urldate = {2024-10-18},
	date = {2020-04},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/4DIUYK5A/McPherson y Tahıroğlu - 2020 - Idiomatic Patterns and Aesthetic Influence in Computer Music Languages.pdf:application/pdf},
}

@collection{clarke_proceedings_2011,
	location = {San Francisco, Calif},
	title = {Proceedings of the International Computer Music Conference, Huddersfield, {UK}: {ICMC} 2011, 31st July - 5th August, 2011},
	isbn = {978-0-9845274-0-3},
	shorttitle = {Proceedings of the International Computer Music Conference, Huddersfield, {UK}},
	pagetotal = {734},
	publisher = {Internat. Computer Music Assoc. [u.a.]},
	editor = {Clarke, Michael and {International Computer Music Association}},
	date = {2011},
	file = {Table of Contents PDF:/home/lara/Zotero/storage/YDEL9RGM/Clarke y International Computer Music Association - 2011 - Proceedings of the International Computer Music Conference, Huddersfield, UK ICMC 2011, 31st July -.pdf:application/pdf},
}

@article{mccartney_rethinking_2002,
	title = {Rethinking the Computer Music Language: {SuperCollider}},
	volume = {26},
	issn = {0148-9267, 1531-5169},
	url = {https://direct.mit.edu/comj/article/26/4/61-68/93775},
	doi = {10.1162/014892602320991383},
	shorttitle = {Rethinking the Computer Music Language},
	pages = {61--68},
	number = {4},
	journaltitle = {Computer Music Journal},
	shortjournal = {Computer Music Journal},
	author = {{McCartney}, James},
	urldate = {2024-10-19},
	date = {2002-12},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/F5ED5K5B/McCartney - 2002 - Rethinking the Computer Music Language SuperCollider.pdf:application/pdf},
}

@inproceedings{aaron_sonic_2013,
	location = {Boston Massachusetts {USA}},
	title = {From sonic Pi to overtone: creative musical experiences with domain-specific and functional languages},
	isbn = {978-1-4503-2386-4},
	url = {https://dl.acm.org/doi/10.1145/2505341.2505346},
	doi = {10.1145/2505341.2505346},
	shorttitle = {From sonic Pi to overtone},
	eventtitle = {{ICFP}'13: {ACM} {SIGPLAN} International Conference on Functional Programming},
	pages = {35--46},
	booktitle = {Proceedings of the first {ACM} {SIGPLAN} workshop on Functional art, music, modeling \& design},
	publisher = {{ACM}},
	author = {Aaron, Samuel and Blackwell, Alan F.},
	urldate = {2024-10-23},
	date = {2013-09-28},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/VRK9NDCQ/Aaron y Blackwell - 2013 - From sonic Pi to overtone creative musical experiences with domain-specific and functional language.pdf:application/pdf},
}

@article{aaron_sonic_2016,
	title = {Sonic Pi – performance in education, technology and art},
	volume = {12},
	issn = {1479-4713, 2040-0934},
	url = {https://www.tandfonline.com/doi/full/10.1080/14794713.2016.1227593},
	doi = {10.1080/14794713.2016.1227593},
	pages = {171--178},
	number = {2},
	journaltitle = {International Journal of Performance Arts and Digital Media},
	shortjournal = {International Journal of Performance Arts and Digital Media},
	author = {Aaron, Sam},
	urldate = {2024-10-23},
	date = {2016-07-02},
	langid = {english},
}

@article{petrie_interdisciplinary_2022,
	title = {Interdisciplinary computational thinking with music and programming: a case study on algorithmic music composition with Sonic Pi},
	volume = {32},
	issn = {0899-3408, 1744-5175},
	url = {https://www.tandfonline.com/doi/full/10.1080/08993408.2021.1935603},
	doi = {10.1080/08993408.2021.1935603},
	shorttitle = {Interdisciplinary computational thinking with music and programming},
	pages = {260--282},
	number = {2},
	journaltitle = {Computer Science Education},
	shortjournal = {Computer Science Education},
	author = {Petrie, Christopher},
	urldate = {2024-10-23},
	date = {2022-04-03},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/9ZAXAXES/Petrie - 2022 - Interdisciplinary computational thinking with music and programming a case study on algorithmic mus.pdf:application/pdf},
}

@article{bell_integrating_2018,
	title = {Integrating Computational Thinking with a Music Education Context},
	volume = {17},
	issn = {1648-5831, 2335-8971},
	url = {https://infedu.vu.lt/doi/10.15388/infedu.2018.09},
	doi = {10.15388/infedu.2018.09},
	pages = {151--166},
	number = {2},
	journaltitle = {Informatics in Education},
	author = {Bell, Judith and Bell, Tim},
	urldate = {2024-10-23},
	date = {2018-10-13},
	langid = {english},
	file = {Texto completo:/home/lara/Zotero/storage/DETTCSC2/Bell y Bell - 2018 - Integrating Computational Thinking with a Music Education Context.pdf:application/pdf},
}

@article{petrie_programming_2022,
	title = {Programming music with Sonic Pi promotes positive attitudes for beginners},
	volume = {179},
	issn = {03601315},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0360131521002864},
	doi = {10.1016/j.compedu.2021.104409},
	pages = {104409},
	journaltitle = {Computers \& Education},
	shortjournal = {Computers \& Education},
	author = {Petrie, Christopher},
	urldate = {2024-10-23},
	date = {2022-04},
	langid = {english},
}

@article{sedeno-valdellos_propuesta_2023,
	title = {Propuesta de tutorial de Sonic Pi},
	volume = {12},
	issn = {2695-9623},
	url = {https://journals.eagora.org/revHUMAN/article/view/4690},
	doi = {10.37467/revhuman.v12.4690},
	abstract = {Se diseña un tutorial para enseñar música en Educación Secundaria, para tratar elementos que intervienen en la construcción de una obra musical como la melodía, el ritmo, la armonía, el timbre y el tempo o dinámica. La propuesta pretende ser una guía o trazar un camino diferente hacia la adquisición de estos mismos contenidos curriculares, a través de un tutorial del programa de creación sonora a través de código, Sonic Pi. A través de un aprendizaje lúdico, vinculado a la gamificación, se promulgan nuevas formas de aprendizaje, fomentando la motivación. Se diseña una herramienta de evaluación final.},
	pages = {1--17},
	issue = {Monográfico},
	journaltitle = {{HUMAN} {REVIEW}. International Humanities Review / Revista Internacional de Humanidades},
	shortjournal = {{revHUMAN}},
	author = {Sedeño-Valdellos, Ignacio},
	urldate = {2024-10-23},
	date = {2023-02-08},
	file = {PDF:/home/lara/Zotero/storage/6657SYLZ/Sedeño-Valdellos - 2023 - Propuesta de tutorial de Sonic Pi.pdf:application/pdf},
}

@article{roos_strudel_nodate,
	title = {Strudel: live coding patterns on the Web},
	abstract = {This paper introduces Strudel, which faithfully ports the {TidalCycles} approach to live coding algorithmic patterns to native {JavaScript} and the web. We begin by giving a little background of the first year of development, before sharing some detail about its implementation and examples of use. We go on to outline the wide range of synthesis and other outputs available in Strudel, including {WebAudio}, {MIDI}, {OSC} (for {SuperDirt}), {WebSerial} and {CSound}, and introduce Strudel’s {REPL} live editor, including its built-in visualisations. We then compare Strudel with Tidal, the trade-offs involved between {JavaScript} and Haskell, and the unique capabilities offered by Strudel for aligning patterns, before concluding with some thoughts about the future.},
	author = {Roos, Felix and {McLean}, Alex},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/WKUNZ5CH/Roos y McLean - Strudel live coding patterns on the Web.pdf:application/pdf},
}

@article{mclean_tidal_nodate,
	title = {{TIDAL} – {PATTERN} {LANGUAGE} {FOR} {LIVE} {CODING} {OF} {MUSIC}},
	abstract = {Computer language for the description of pattern has been employed for both analysis and composition of music. In this paper we investigate the latter, with particular interest in pattern language for use in live coding performance [1]. Towards this end we introduce Tidal, a pattern language designed for music improvisation, and embedded in the Haskell programming language.},
	author = {{McLean}, Alex and Wiggins, Geraint},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/PJGA954L/McLean y Wiggins - TIDAL – PATTERN LANGUAGE FOR LIVE CODING OF MUSIC.pdf:application/pdf},
}

@book{blackwell_live_2022-1,
	location = {Cambridge},
	title = {Live Coding: A User's Manual},
	isbn = {978-0-262-54481-8 978-0-262-37263-3},
	series = {Software Studies},
	shorttitle = {Live Coding},
	abstract = {The first comprehensive introduction to the origins, aspirations, and evolution of live coding. Performative, improvised, on the fly: live coding is about how people interact with the world and each other via code. In the last few decades, live coding has emerged as a dynamic creative practice, gaining attention across cultural and technical fields—from music and the visual arts to computer science. Live Coding: A User's Manual is the first comprehensive introduction to the practice and a broader cultural commentary on the potential for live coding to open up deeper questions about contemporary cultural production and computational culture. This multiauthored book—by artists and musicians, software designers, and researchers—provides a practice-focused account of the origins, aspirations, and evolution of live coding, including expositions from a wide range of live coding practitioners. In a more conceptual register, the authors consider liveness, temporality, and knowledge in relation to live coding, alongside speculating on the practice's future forms. To freely download and read ebook (mobi, epub) and {PDF} files, please visit the resources tab. This book is open access and can be freely downloaded, shared and (if you wish) edited, subject to a {CC}-{BY}-{SA} license},
	pagetotal = {1},
	publisher = {The {MIT} Press},
	author = {Blackwell, Alan and Cocker, Emma and Cox, Geoff and {McLean}, Alex and Magnusson, Thor},
	date = {2022},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/GRFZRQQF/Blackwell et al. - 2022 - Live Coding A User's Manual.pdf:application/pdf},
}

@article{mclean_tidal_nodate-1,
	title = {{TIDAL} – {PATTERN} {LANGUAGE} {FOR} {LIVE} {CODING} {OF} {MUSIC}},
	abstract = {Computer language for the description of pattern has been employed for both analysis and composition of music. In this paper we investigate the latter, with particular interest in pattern language for use in live coding performance [1]. Towards this end we introduce Tidal, a pattern language designed for music improvisation, and embedded in the Haskell programming language.},
	author = {{McLean}, Alex and Wiggins, Geraint},
	langid = {english},
	file = {PDF:/home/lara/Zotero/storage/7GCDMILX/McLean y Wiggins - TIDAL – PATTERN LANGUAGE FOR LIVE CODING OF MUSIC.pdf:application/pdf},
}

@article{prospero_live_2015,
	title = {Live coding. Arte computacional en proceso},
	number = {5},
	author = {Próspero, Carolina Di},
	date = {2015},
	langid = {spanish},
	file = {PDF:/home/lara/Zotero/storage/ZLSLV2N2/Próspero - 2015 - Live coding. Arte computacional en proceso.pdf:application/pdf},
}
